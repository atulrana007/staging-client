{"ast":null,"code":"var _jsxFileName = \"/Users/arana1/Documents/Work/QA-ClientApp/src/components/Tokens.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Tokens = props => {\n  const history = useHistory();\n  const {\n    detailsState,\n    setDetailsState\n  } = props;\n\n  const getParse = e => {\n    if (e.target.id === \"access\") {\n      history.push(\"/parseAccessToken\");\n    } else if (e.target.id === \"id\") {\n      history.push(\"/parseIDToken\");\n    } else if (e.target.id === \"refresh\") {\n      history.push(\"/parseRefreshToken\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"AccessToken:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: detailsState.accessToken,\n    onChange: e => {\n      setDetailsState({ ...detailsState,\n        accessToken: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      with: \"50%\"\n    },\n    type: \"button\",\n    id: \"access\",\n    onClick: e => getParse(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Parse Access Token\"), \"IdToken:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: detailsState.idToken,\n    onChange: e => {\n      setDetailsState({ ...detailsState,\n        idToken: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      with: \"50%\"\n    },\n    type: \"button\",\n    id: \"id\",\n    onClick: e => getParse(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Parse ID Token\"), \"RefreshToken:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: detailsState.refreshToken,\n    onChange: e => {\n      setDetailsState({ ...detailsState,\n        refreshToken: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), \"Custom Parameter(pass the parameter to be punched in the access token):\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setDetailsState({ ...detailsState,\n        param1: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"refresh\",\n    style: {\n      with: \"50%\"\n    },\n    type: \"button\",\n    onClick: e => getParse(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Get New Access token\")));\n};\n\nexport default Tokens;","map":{"version":3,"sources":["/Users/arana1/Documents/Work/QA-ClientApp/src/components/Tokens.js"],"names":["React","useHistory","Tokens","props","history","detailsState","setDetailsState","getParse","e","target","id","push","display","flexDirection","accessToken","value","with","idToken","refreshToken","param1"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Tokens = (props) => {\n  const history = useHistory();\n  const { detailsState, setDetailsState } = props;\n\n  const getParse = (e) => {\n    if (e.target.id === \"access\") {\n      history.push(\"/parseAccessToken\");\n    } else if (e.target.id === \"id\") {\n      history.push(\"/parseIDToken\");\n    } else if(e.target.id === \"refresh\") {\n      history.push(\"/parseRefreshToken\");\n    }\n  };\n\n  return (\n    <div>\n      <form style={{ display: \"flex\", flexDirection: \"column\" }}>\n        AccessToken:\n        <input\n          type=\"text\"\n          value={detailsState.accessToken}\n          onChange={(e) => {\n            setDetailsState({ ...detailsState, accessToken: e.target.value });\n          }}\n        ></input>\n        <br/>\n        <button\n          style={{ with: \"50%\" }}\n          type=\"button\"\n          id=\"access\"\n          onClick={(e) => getParse(e)}\n        >\n          Parse Access Token\n        </button>\n        IdToken:\n        <input\n          type=\"text\"\n          value={detailsState.idToken}\n          onChange={(e) => {\n            setDetailsState({ ...detailsState, idToken: e.target.value });\n          }}\n        ></input>\n        <br/>\n        <button\n          style={{ with: \"50%\" }}\n          type=\"button\"\n          id=\"id\"\n          onClick={(e) => getParse(e)}\n        >\n          Parse ID Token\n        </button>\n        RefreshToken:\n        <input\n          type=\"text\"\n          value={detailsState.refreshToken}\n          onChange={(e) => {\n            setDetailsState({ ...detailsState, refreshToken: e.target.value });\n          }}\n        ></input>\n        <br/>\n        Custom Parameter(pass the parameter to be punched in the access token):\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setDetailsState({ ...detailsState, param1: e.target.value });\n          }}\n        ></input>\n        <br/>\n        <button id=\"refresh\"\n          style={{ with: \"50%\" }}\n          type=\"button\"\n          onClick={(e) => getParse(e)}\n        >\n          Get New Access token\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default Tokens;\n"]},"metadata":{},"sourceType":"module"}