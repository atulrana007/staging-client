{"ast":null,"code":"var _jsxFileName = \"/Users/arana1/Documents/Work/QA-ClientApp/src/components/ID.js\";\nimport React from \"react\";\n\nconst OTP = props => {\n  const {\n    detailsState\n  } = props;\n\n  const getOTP = () => {\n    console.log(\"e\");\n    var base64Url = detailsState.idToken.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    const ans = JSON.parse(jsonPayload);\n    return ans;\n  };\n\n  const parse = getOTP();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Claims of ID token\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 32\n    }\n  }), \"Nickname : \", parse.nickname, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 34\n    }\n  }), \"Name : \", parse.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }\n  }), \"Email  : \", parse.email, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }), \"Is Email Verified : \", parse.email_verified, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 49\n    }\n  }), \"Picture : \", parse.picture, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }\n  }));\n};\n\nexport default OTP;","map":{"version":3,"sources":["/Users/arana1/Documents/Work/QA-ClientApp/src/components/ID.js"],"names":["React","OTP","props","detailsState","getOTP","console","log","base64Url","idToken","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","ans","JSON","parse","nickname","name","email","email_verified","picture"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;;AACA,QAAME,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,QAAIC,SAAS,GAAGJ,YAAY,CAACK,OAAb,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAhB;AACA,QAAIC,MAAM,GAAGH,SAAS,CAACI,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,QAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AAC5E,aAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACC,KAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAGA,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWX,WAAX,CAAZ;AAEA,WAAOS,GAAP;AACD,GAVD;;AAWA,QAAME,KAAK,GAAGnB,MAAM,EAApB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3B,iBAEcmB,KAAK,CAACC,QAFpB,eAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF7B,aAGUD,KAAK,CAACE,IAHhB,eAGqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHrB,eAIYF,KAAK,CAACG,KAJlB,eAIwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJxB,0BAKuBH,KAAK,CAACI,cAL7B,eAK4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL5C,gBAMaJ,KAAK,CAACK,OANnB,eAM2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN3B,CADF;AAWD,CAzBD;;AA0BA,eAAe3B,GAAf","sourcesContent":["import React from \"react\";\n\nconst OTP = (props) => {\n  const { detailsState } = props;\n  const getOTP = () => {\n    console.log(\"e\");\n    var base64Url = detailsState.idToken.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    const ans = JSON.parse(jsonPayload);\n\n    return ans;\n  };\n  const parse = getOTP();\n  return (\n    <div>\n      <b>Claims of ID token</b><br/>\n      Nickname : {parse.nickname}<br/>\n      Name : {parse.name}<br/>\n      Email  : {parse.email}<br/>\n      Is Email Verified : {parse.email_verified}<br/>\n      Picture : {parse.picture}<br/>\n\n    </div>\n  );\n};\nexport default OTP;\n"]},"metadata":{},"sourceType":"module"}